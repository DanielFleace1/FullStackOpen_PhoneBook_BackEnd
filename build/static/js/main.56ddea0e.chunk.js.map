{"version":3,"sources":["components/SearchBar.js","components/Names.js","components/NewEntry.js","components/Message.js","components/errorMessage.js","services/serverFunctions.js","App.js","index.js"],"names":["SearchBar","handleFilterChange","onChange","Names","persons","newFilter","handleDelete","index","findIndex","x","name","length","map","number","onClick","id","NewEntry","newName","newNum","handleNameChange","handleNumChange","addNewName","onSubmit","value","type","Message","message","className","ErrorMessage","errorMessage","baseUrl","serverFunctions","getAll","axios","get","create","newObject","post","update","put","App","useState","setPersons","setNewName","setNewNum","setNewFilter","setMessage","setErrorMessage","useEffect","then","response","data","e","target","preventDefault","newNamelen","newNumlen","alert","newNameObj","person","find","n","window","confirm","changedPerson","prsn","setTimeout","catch","error","console","log","filter","concat","a","b","delete","copy","removeIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56ddea0e.chunk.js","sourcesContent":["import React from 'react'\nconst SearchBar = ({handleFilterChange}) => {\n    return (\n      <div>Search for names:<input onChange={handleFilterChange}/></div>\n    )\n}\nexport default SearchBar","import React from 'react'\n\nconst Names = ({persons,newFilter,handleDelete}) => {\n\n    // Find index in persons of the filtered data so it can be displayed \n    const index = persons.findIndex(x =>x.name === newFilter)\n    \n    if(newFilter.length===0){\n      return(\n        <div>\n          <h2>Numbers</h2>\n          {persons.map((persons,index)=> {return  <li key={index}> {persons.name}: {persons.number} <button  onClick = {()=>{handleDelete(persons.id,persons.name)}} > delete</button></li>\n          })}\n        </div>\n      )\n    }\n    else if(index > -1){\n      return (\n        <div> \n          <h2>Filtered names</h2>\n          {persons[index].name}: {persons[index].number}  <button onClick = {()=>{handleDelete(persons[index].id,persons[index].name)}}> delete </button>\n          <p>(clear filter bar to see all existing phone numbers)</p>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div> \n          <h2>Filtered names</h2>\n          <p> No filtered names exist</p>\n          {/* <div>{newFilter}</div> */}\n          <p>(clear filter bar to get all phone numbers)</p>\n        </div>\n      )\n    }\n  }\n\nexport default Names","import React from 'react'\n\nconst NewEntry = ({newName,newNum,handleNameChange,handleNumChange,addNewName}) => {\n    return(\n      <form onSubmit = {addNewName} >\n      <div>name: <input value = {newName} onChange={handleNameChange} /></div>\n      <div>number: <input value = {newNum} onChange={handleNumChange}/></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n    )\n}\n\nexport default NewEntry","import React from 'react'\nimport '../index.css'\n\nconst Message = ({message}) => {\n    if(!message){\n        return(\n            <div></div> \n        )\n    }\n    else{\n        return(\n            <div className = 'successMessage'>{message}</div>\n        )\n    }\n}\n\nexport default Message","import React from 'react'\nimport '../index.css'\n\nconst ErrorMessage = ({errorMessage}) => {\n    if(!errorMessage){\n        return(\n            <div></div> \n        )\n    }\n    else{\n        return(\n            <div className = 'errorMessage'>{errorMessage}</div>\n        )\n    }\n}\n\nexport default ErrorMessage","import axios from 'axios'\n// --- For testing Front end with db.json\n//const baseUrl ='http://localhost:3001/persons'\n// --- For connecting to backEnd\n//const baseUrl = 'https://radiant-refuge-98080.herokuapp.com/api/persons'\n// relative baseUrl\nconst baseUrl = '/api/persons'\n//Get all function used for getting data from server \nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n// create function used for posting a new phone number \nconst create = newObject =>{\n    return axios.post(baseUrl,newObject)\n}\n\nconst update = (id,newObject) => {\n  return axios.put(`${baseUrl}/${id}`,newObject)\n}\n\n\nlet serverFunctions = {\n    getAll: getAll,\n    create: create,\n    update:update\n}\n\nexport default serverFunctions \n\n","import React, { useEffect, useState } from 'react'\n//import axios from 'axios'\nimport SearchBar from './components/SearchBar'\nimport Names from './components/Names'\nimport NewEntry from './components/NewEntry'\nimport Message from './components/Message'\nimport ErrorMessage from './components/errorMessage'\nimport serverFunctions from './services/serverFunctions'\nimport axios from 'axios'\n\n// base URLs for delete\n// const baseUrl = 'https://radiant-refuge-98080.herokuapp.com/api/persons'\n// relative baseUrl\nconst baseUrl = '/api/persons'\n\n\n// App Component \nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNum] = useState('');\n  const [newFilter,setNewFilter] = useState('')\n  const [message,setMessage] = useState(null)\n  const [errorMessage,setErrorMessage] = useState(null)\n  \n  const addNewName = (e) => {\n    e.preventDefault();\n    /** Make sure Data is entered for all fields */\n    const newNamelen = newName.length;\n    const newNumlen = newNum.length;\n    if(newNamelen === 0 || newNumlen === 0){ return alert('Please enter data for all the fields')}    \n    const newNameObj = {\n      name:newName,\n      number: newNum\n    }   \n    // Look for name in phone book. Will return the object if it exists \n    const person = persons.find(n=>n.name === newName)\n    // if numnber does not already exist \n    if(!person) {\n      // create new object to be \"posted\"\n      serverFunctions\n      .create(newNameObj)\n      .then(response=>{  \n        //console.log('response to post')\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNum('')\n        setMessage(`${newNameObj.name} was added to your phone book`)\n        setTimeout(() => {\n          setMessage(null)\n          }, 3000)\n      })\n      .catch((error) => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n        setNewName('');\n        setNewNum('');\n\n\n      })\n    }\n    // if number does exist and user wants to change their num.\n    else{ \n      const truthy = window.confirm(`${newName} is already added to the phonebook, would you like to replace the old number with a new one?`);      \n      // users confirms to make a change\n      if(truthy){\n        const changedPerson = {...person, number: newNum}\n        serverFunctions\n        .update(person.id,changedPerson)\n        .then( response=> {\n          setPersons(persons.map(prsn=> prsn.id !== person.id ? prsn : response.data))\n          setNewName('');\n          setNewNum('');\n          setMessage(`${newNameObj.name}'s number was changed to ${newNameObj.number} in your phone book `)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n          })\n        .catch(error=> {\n          console.log('There is an error:',error)\n          setErrorMessage(`${newNameObj.name} has already been deleted from the server `)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n          setNewName('');\n          setNewNum('');\n          setPersons(persons.filter(prsn => prsn.id !== person.id))\n        })  \n      }\n      else return\n    }\n  }\n\n  // Handle Changes in name  change for new entry \n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  }\n  // Handle Changes in number change for new entry \n  const handleNumChange = (e) => {\n    setNewNum(e.target.value);\n  }\n  // Hanlde changes in the filter\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value);\n  }\n  // Handle Delete\n  const handleDelete = (a,b) => {\n    const truthy = window.confirm(`Are you sure you want to delete ${b} from your phonebook?`)\n    if(truthy){\n      axios\n      .delete(`${baseUrl}/${a}`)\n      let copy = [...persons]\n      const removeIndex= persons.findIndex(persons=>persons.id === a)\n      console.log(copy)\n      copy.splice(removeIndex,1)\n      console.log(copy)\n      setPersons(copy)\n    }\n    else return \n  }\n    // Get initial data from backend. Storing Data in state persons.\n    useEffect(() => {\n      serverFunctions\n        .getAll()\n        .then(response =>{\n        setPersons(response.data)\n      })\n    },[])\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Message  message = {message}/>\n      <ErrorMessage  errorMessage = {errorMessage}/>\n      <SearchBar handleFilterChange = {handleFilterChange} />\n      <h2>Add a new person</h2>\n      <NewEntry newName = {newName} newNum ={newNum}  handleNameChange ={handleNameChange} handleNumChange = {handleNumChange} addNewName = {addNewName} />\n      <Names persons = {persons} newFilter ={newFilter} handleDelete = {handleDelete} />\n    </div>\n  )\n}\nexport default App\n\n","//import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}